-- for forgien key --
CREATE DATABASE FK;
USE FK;
CREATE TABLE BRANCH(
BRANCH_ID INT PRIMARY KEY NOT NULL,
MANAGER VARCHAR(10) ,
ADDRESS VARCHAR(10));
INSERT INTO BRANCH VALUES(1,'SELVA','VPM');
INSERT INTO BRANCH VALUES(2,'MUGIL','VPM');
INSERT INTO BRANCH VALUES(3,'SARA','VPM');
INSERT INTO BRANCH VALUES(4,'DEVA','VPM');

SELECT * FROM BRANCH;

-- THIS TABLE  REFER THAT BRACH TABLE
CREATE TABLE EMPLOYEE(
EMP_ID INT  NOT NULL AUTO_INCREMENT,
EMP_NAME VARCHAR(10) NOT NULL,
SALARY INT ,
BRANCH_ID INT,
CONSTRAINT FK_BID FOREIGN KEY(BRANCH_ID) REFERENCES BRANCH(BRANCH_ID)
);
INSERT INTO EMPLOYEE VALUES (1,'RAM',1000,1);
INSERT INTO EMPLOYEE VALUES (2,'RAHUL',1000,2);
INSERT INTO EMPLOYEE VALUES (3,'RAMESH',1000,3);
INSERT INTO EMPLOYEE VALUES (5,'RAGU',1000,2);
INSERT INTO EMPLOYEE VALUES (4,'RAVI',1000,3);
INSERT INTO EMPLOYEE VALUES (6,'RAVANA',1000,2);
INSERT INTO EMPLOYEE VALUES (2,'RAVANI',2000,3);
INSERT INTO EMPLOYEE VALUES (2,'RAVI',2000,3);


SELECT * FROM BRANCH;
SELECT * FROM EMPLOYEE;

-- FOR INDEX --
 SHOW INDEX FROM EMPLOYEE;
 ALTER TABLE EMPLOYEE ADD INDEX IND_NAME (EMP_NAME);
 CREATE INDEX IDX_NAME ON EMPLOYEE(BRANCH_ID); 
 ALTER TABLE EMPLOYEE  DROP INDEX IDX_NAME; 
 ALTER TABLE EMPLOYEE DROP FOREIGN KEY FK_BID; 

 DELETE FROM BRANCH
 WHERE BRANCH_ID=3;

DESCRIBE TABLE EMPLOYEE;

DROP TABLE EMPLOYEE;
DROP TABLE 	BRANCH;

-- JOINS --

SELECT * FROM BRANCH;
SELECT * FROM EMPLOYEE;

-- JOIN-- 
SELECT EMPLOYEE.EMP_ID,EMPLOYEE.EMP_NAME,EMPLOYEE.SALARY,BRANCH.MANAGER AS AFTERJOIN
FROM EMPLOYEE
JOIN BRANCH 
ON EMPLOYEE.BRANCH_ID=BRANCH.BRANCH_ID ORDER BY EMP_ID;

-- RIGHT JOIN - 
SELECT EMPLOYEE.EMP_ID,EMPLOYEE.EMP_NAME,EMPLOYEE.SALARY,BRANCH.MANAGER AS AFTERJOIN
FROM EMPLOYEE
RIGHT JOIN BRANCH 
ON EMPLOYEE.BRANCH_ID=BRANCH.BRANCH_ID ORDER BY BRANCH.MANAGER;
-- LEFT JOIN --
SELECT EMPLOYEE.EMP_ID,EMPLOYEE.EMP_NAME,EMPLOYEE.SALARY,BRANCH.MANAGER AS AFTERJOIN
FROM EMPLOYEE
LEFT JOIN BRANCH 
ON EMPLOYEE.BRANCH_ID=BRANCH.BRANCH_ID ORDER BY BRANCH.MANAGER;

SELECT B.BRANCH_ID,COUNT(EMP_ID) 
FROM BRANCH AS B
JOIN EMPLOYEE AS E
ON B.BRANCH_ID=E.BRANCH_ID
GROUP BY B.BRANCH_ID;

SELECT * FROM BRANCH;
SELECT * FROM EMPLOYEE;
-- SUB QURIES -- 
SELECT * FROM EMPLOYEE 
WHERE BRANCH_ID=(SELECT BRANCH_ID FROM BRANCH 
WHERE MANAGER="MUGIL");

-- EXISTS - THIS COMMENT USED ALMOST IN SUBQUERIES --
SELECT * FROM BRANCH;
SELECT * FROM EMPLOYEE;
SELECT MANAGER FROM BRANCH
WHERE EXISTS(
SELECT * FROM EMPLOYEE 
WHERE EMPLOYEE.BRANCH_ID=BRANCH.BRANCH_ID AND EMPLOYEE.EMP_NAME LIKE 'R%I'
);

SELECT COUNT(BRANCH_ID)
FROM EMPLOYEE GROUP BY EMP_ID;  
SELECT * FROM EMPLOYEE 
WHERE  EMPLOYEE.EMP_NAME LIKE 'R%I';

-- ANY --

SELECT * FROM BRANCH
WHERE BRANCH_ID=ANY(
SELECT BRANCH_ID FROM EMPLOYEE
WHERE EMP_NAME LIKE 'R%I');

SELECT * FROM EMPLOYEE
WHERE BRANCH_ID<>ALL( 
SELECT E.BRANCH_ID FROM EMPLOYEE AS E
JOIN BRANCH AS B
ON E.BRANCH_ID=B.BRANCH_ID
WHERE B.MANAGER="MUGIL");

-- for view -- 
CREATE VIEW ITSVIEW
AS
SELECT EMPLOYEE.EMP_ID,EMPLOYEE.EMP_NAME,EMPLOYEE.SALARY,BRANCH.MANAGER AS AFTERJOIN
FROM EMPLOYEE
JOIN BRANCH 
ON EMPLOYEE.BRANCH_ID=BRANCH.BRANCH_ID ORDER BY EMP_ID;

-- DISPLAYING A VIEW -- 
SELECT * FROM ITSVIEW;

-- MODIFYING VIEW -- 
CREATE OR REPLACE VIEW ITSVIEW
AS
SELECT EMPLOYEE.EMP_ID,EMPLOYEE.EMP_NAME,EMPLOYEE.SALARY,BRANCH.ADDRESS AS AFTERJOIN
FROM EMPLOYEE
JOIN BRANCH 
ON EMPLOYEE.BRANCH_ID=BRANCH.BRANCH_ID ORDER BY EMP_ID;

-- DROPING VIEW -- 
DROP VIEW ITSVIEW;

