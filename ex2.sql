CREATE DATABASE WORKERS;

USE WORKERS;


CREATE TABLE EMPLOYEES(
ID INT PRIMARY KEY,
NAME VARCHAR(20),
JOB_DEC VARCHAR(20),
SALARY INT);

INSERT INTO EMPLOYEE VALUES (1,"RAHIM","CEO",10000),
(2,"SANTHOSH","SUB CEO",5000),
(3,"GOKUL","MANAGER",3000),
(4,"SELVA","HR",2000),
(5,"MUGIL","HR",2000),
(6,"SURIYA","EMPLOYEE",1000),
(7,"SHAN","EMPLOYEE",1000),
(8,"RATH","EMPLOYEE",500),
(9,"SARAVANA","MANAGER",3000),
(10,"MADHAN","EMPLOYEE",1000);

SELECT * FROM EMPLOYEE;

SELECT * FROM EMPLOYEE
WHERE JOB_DEC="SUB CEO" OR JOB_DEC="CEO";

SELECT * FROM EMPLOYEE
WHERE JOB_DEC IN ("SUB CEO","CEO");

SELECT NAME FROM EMPLOYEE
WHERE SALARY>=5000;

SELECT * FROM EMPLOYEE
WHERE SALARY BETWEEN 1000 AND 10000;

SELECT ID,NAME,SALARY FROM EMPLOYEE
WHERE JOB_DEC = "EMPLOYEE" LIMIT 3;

SELECT * FROM EMPLOYEE
WHERE NAME LIKE "S%H";

SELECT * FROM EMPLOYEE
WHERE NAME  LIKE '_U%';

UPDATE EMPLOYEE
SET JOB_DEC="SUB MANAGER"
WHERE  NAME="SELVA";

UPDATE EMPLOYEE
SET SALARY=SALARY+500
WHERE JOB_DEC = "SUB MANAGER";

DELETE FROM EMPLOYEE
WHERE NAME IN("MADHAN","RATH");

-- DISTINCT COMMAND --
SELECT  DISTINCT * FROM EMPLOYEE;
SELECT DISTINCT NAME FROM EMPLOYEE;
SELECT DISTINCT NAME,ID,JOB_DEC FROM EMPLOYEE;

-- ORDER BY COMMAND --
SELECT * FROM EMPLOYEE ORDER BY NAME DESC;
SELECT SALARY FROM EMPLOYEE ORDER BY SALARY DESC;
SELECT * FROM EMPLOYEE ORDER BY NAME,SALARY DESC;

-- CUSTOMISE ORDER COMMAND --
SELECT * FROM EMPLOYEE 
ORDER BY (CASE JOB_DEC
WHEN "CEO" THEN 1
WHEN "SUB CEO" THEN 2
WHEN "MANAGER" THEN 3
WHEN "SUB MANAGER" THEN 4
WHEN "HR" THEN 5
ELSE 100 END
),(CASE ID
WHEN 9 THEN 1
ELSE 100 END);

-- FUNCTION IN SQL --
-- AVERAGE --
SELECT AVG(SALARY) SALARY FROM EMPLOYEE;
-- COUNT --
SELECT COUNT(SALARY) FROM EMPLOYEE;
-- SUM -- 
SELECT SUM(SALARY) TOTAL_SUM_SALARY FROM EMPLOYEE;
-- MAX --
SELECT MAX(SALARY) MAX_SALARY FROM EMPLOYEE;
-- UPPERCASE AND LOWERCASE--
SELECT LCASE(NAME),SALARY FROM EMPLOYEE;
SELECT UCASE(NAME),SALARY FROM EMPLOYEE;
-- LEN OF CHARACTER --
SELECT NAME,CHAR_LENGTH(NAME) LEN FROM EMPLOYEE;
-- STRING JOINING --
SELECT NAME,JOB_DEC,CONCAT('RS ',SALARY,0) AMOUNT FROM EMPLOYEE;
-- STRING  SLICING --
SELECT NAME,LEFT(JOB_DEC,3) JOB , SALARY FROM EMPLOYEE;

-- ADDING A NEW DATE COLUMN --
ALTER TABLE EMPLOYEE ADD COLUMN HIRE_DATE DATE;
SELECT * FROM EMPLOYEE;
-- ADDING A SAME DATE TO ALL PERSONS --
UPDATE EMPLOYEE
SET HIRE_DATE=DATE_FORMAT(CURDATE(),"%y-%m-%d");

-- DATE DIFFERECE --
SELECT datediff(CURDATE(),"2023-07-10") AS DATES;
-- CALCULATING THE DATE -- 
SELECT date_add(CURDATE(), INTERVAL 1 YEAR) AS DATES;

--  EXERCISE -- DATE_FRORMAT()
CREATE TABLE DATES(START DATE,ONEDAY DATE,ONEWEEK DATE ,ONEYEAR DATE);
INSERT INTO DATES VALUES (DATE_FORMAT(CURDATE(),"%y-%m-%d") ,date_add(curdate(), INTERVAL 1 DAY),date_add(curdate(), INTERVAL 1 WEEK),date_add(curdate(), INTERVAL 1 YEAR));
SELECT  * FROM DATES;

-- GROUPING COMMAND --
SELECT JOB_DEC ,AVG(SALARY) AS SALARY
FROM EMPLOYEE 
GROUP BY JOB_DEC ;

SELECT JOB_DEC,COUNT(job_dec) COUNT FROM EMPLOYEE 
WHERE SALARY>=100
GROUP BY JOB_DEC HAVING COUNT(job_dec) 
ORDER BY JOB_DEC ;

SELECT concat(select ) FROM EMPLOYEE;